---
layout: default
title: Portas lógicas
nav_exclude: true
---
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script async src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js?config=TeX-AMS-MML_CHTML"></script>

## 1. Introdução

A álgebra de um sistema numérico descreve como executar operações aritméticas usando os operadores daquele sistema sobre as variáveis, que podem receber quaisquer valores dentro daquele sistema. A **álgebra booleana** é o sistema matemático que opera sobre dígitos binários (ou bits), mais especificamente 0s e 1s. Os circuitos digitais com uma ou mais entradas e uma saída capazes de executar operações lógicas são chamados de **portas lógicas** - as mais comuns são AND, OR e NOT.

Essas portas possuem dígitos binários como entradas e saídas e existe uma forma tabular para representar as saídas de uma porta dadas todas as entradas possíveis. Essa forma tabular é chamada de **tabela-verdade**. 

### 1.1. Porta AND

A porta AND também é chamada de *multiplicação lógica*.
Todas as combinações de duas entradas e saídas para a porta AND estão espresentadas na Tabela 1. 

A expressão booleana para a porta (ou operação) AND aplicada aos operandos A e B é representada como:

$Z = A.B$, $Z = AB$, ou ainda $Z = A \wedge B$, onde (.) e ($\wedge$) representam a multiplicação lógica.

**Tabela 1.** Tabela verdade da porta lógica AND aplicada a duas entradas A e B.
|$A$|$B$|$A \wedge B$|
--|---|--
| 0 | 0 | **0** |
| 0 | 1 | **0** |
| 1 | 0 | **0** |
| 1 | 1 | **1** |

O símbolo padrão da porta AND é mostrado na Figura 1.

![Porta AND](/content/images/and-2.png "Porta AND")
**Figura 1.** O símbolo da porta AND.

### 1.2. Porta OR

A porta OR também é chamada de *adição lógica*.
Todas as combinações de duas entradas e saídas para a porta OR estão espresentadas na Tabela 2. 

A expressão booleana para a porta (ou operação) OR aplicada aos operandos A e B é representada como:

$Z = A+B$ ou ainda $Z = A \vee B$, onde (+) e ($\vee$) representam a adição lógica.

**Tabela 2.** Tabela verdade da porta lógica OR aplicada a duas entradas A e B.
|$A$|$B$|$A \vee B$|
--|---|--
| 0 | 0 | **0** |
| 0 | 1 | **1** |
| 1 | 0 | **1** |
| 1 | 1 | **1** |

O símbolo padrão da porta OR é mostrado na Figura 2.

![Porta OR](/content/images/or-2.png "Porta OR")
**Figura 2.** O símbolo da porta OR.

### 1.3. Porta NOT

Uma variável booleana possui dois possíveis valores: 0 ou 1. O complemento de 0 é 1 e vice-versa. A porta NOT, também conhecida como inversor, produz o complemento de uma variável. Dessa forma, se A é a entrada de uma porta NOT, sua saída é representada por *Z = $\neg$ A*.

A porta NOT possui somente um terminal de entrada, diferentemente das portas OR e AND, que possuem mais de uma entrada. A tabela-verdade da porta NOT é mostrada na Tabela 3.

**Tabela 3.** Tabela verdade da porta lógica NOT.
|$A$|$\neg A$|
--|--
| 0 | **1** |
| 1 | **0** |

O símbolo padrão da porta NOT é mostrado na Figura 3.

![Porta OR](/content/images/not-gate.png "Porta OR")
**Figura 3.** O símbolo da porta OR.

### 1.4. Porta XOR (OU exclusivo)

Há, ainda, a porta OU exclusivo, abreviada como XOR, que tem duas entradas e uma saída. O símbolo padrão para a porta XOR é mostrado na Figura 4.

![Porta OR](/content/images/xor-gate.png "Porta OR")
**Figura 3.** O símbolo da porta XOR.

A saída da operação XOR é 1 quando as entradas são diferentes ($A = 0$ e $B = 1$ ou $A = 1$ e $B = 0$) ou 0 quando as entradas são iguais ($A = 0$ e $B = 0$ ou $A = 1$ e $B = 1$).

## 2. Leis da álgebra booleana

Utilizando as operações básicas vistas na parte anterior, esta parte apresenta regras adicionais e leis da lógica booleana necessárias para analisar e desenvolver expressões lógicas.

### 2.1. Teoremas de uma única variável

Como o título sugere, esta seção detalha as operações de portas lógicas quando somente uma variável está presente.

#### **Leis da idempotência**

Demonstram que uma operação pode se aplicada várias vezes sem alteração do valor do resultado inicial.

$$
A \wedge A = A
$$
$$
A \vee A = A
$$

#### **Propriedade do elemento inverso**

Mostra o efeito de uma operação aplicada a uma variável e o complemento desta.

$$
A \wedge \neg A = 0
$$
$$
A \vee \neg A = 1
$$

#### **Lei da involução**

O complemento do complemento de uma variável é igual à própria variável.

$$
\neg \neg A = A
$$

#### **Identidade**

Apresenta os efeitos de aplicar um operador a uma variável e 0 ou 1.

$$
A \wedge 0 = 0
$$
$$
A \wedge 1 = A
$$
$$
A \vee 0 = A
$$
$$
A \vee 1 = 1
$$

### 2.2. Teoremas multivariável

Essas regras se aplicam a operações de álgebra booleana que usam mais de uma variável. 

#### **Propriedade comutativa**

Mostra que a saída é a mesma independentemente da ordem das entradas.

$$
X \wedge Y = Y \wedge X
$$
$$
X \vee Y = Y \vee X
$$

#### **Propriedade associativa**

Mostra que a ordem de executar uma operação não altera o resultado.

$$
(X \wedge Y) \wedge Z = X \wedge (Y \wedge Z)
$$
$$
(X \vee Y) \vee Z = X \vee (Y \vee Z)
$$

#### **Propriedade distributiva**

Mostra como expandir equações.

$$
A \wedge (B \vee C) = (A \wedge B) \vee (A \wedge C)
$$
$$
A \vee (B \wedge C) = (A \vee B) \wedge (A \vee C)
$$

#### **Teorema de De Morgan**

$$
\neg (A \vee B) = \neg A \wedge \neg B
$$
$$
\neg (A \wedge B) = \neg A \vee \neg B
$$

#### **Leis da absorção**

$$
A \wedge (A \vee B) = A
$$
$$
A \vee (A \wedge B) = A
$$